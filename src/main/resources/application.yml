
debug: false
server:
  servlet:
    session:
      timeout: PT50M
spring:
  thymeleaf:
    cache: false #关闭缓存
    mode: HTML
    encoding: utf-8
  #    prefix: classpath:/views/ #放置模板的目录 ，templates
  redis:
    database: 0
    host: localhost
    port: 6379
    timeout: 6000
    password: '123456'
    jedis:
      pool:
        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: 60      # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10      # 连接池中的最大空闲连接
        min-idle: 5       # 连接池中的最小空闲连接
  datasource:
    druid:
      username: root
      password: abc123456
      url: jdbc:mysql://localhost:3306/food_pairing?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
      driverClassName: com.mysql.cj.jdbc.Driver
      #      db-type: com.alibaba.druid.pool.DruidDataSource
      ###################以下为druid增加的配置###########################
      type: com.alibaba.druid.pool.DruidDataSource
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
      ###############以上为配置druid添加的配置########################################
mybatis-plus:
  mapper-locations: 'classpath*:mapper/*.xml'
  type-aliases-package: com.phj.pojo
  configuration:
    # 把日志直接打印到控制台
    mapUnderscoreToCamelCase: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#    二级缓存关闭
    cache-enabled: false
  global-config:
    db-config:
      #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: ID_WORKER
      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #数据库类型
      db-type: MYSQL
      # 返回map时true:当查询数据为空时字段返回为null,false:不加这个查询数据为空时，字段将被隐藏
      call-setters-on-nulls: true
      logic-delete-field: flag  # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
pagehelper:
  #标识是哪一种数据库
  helperDialect: mysql
  #启用合理化，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页
  reasonable: true
  #为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值， 可以配置pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值， 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
  params: count=countSql
  #支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页
  #supportMethodsArguments: true
  #如果 pageSize=0 就会查询出全部的结果（相当于没有执行分页查询）
  page-size-zero: true
logging:
  level:
    com.baomidou.samples.metainfo: debug

shiro:
  redis:
    port: 6379
    host: localhost
    password: '123456'
    cache:
      key-prefix: 'shiro:cache:'
      expiration: 900

